parallelism = 14
search_orientation = "edge"
response_persistence_policy = "discard_response_from_memory"

[graph]
edge_list_input_file = "../rust/bambam-osm/out/edges-compass.csv.gz"
vertex_list_input_file = "../rust/bambam-osm/out/vertices-compass.csv.gz"
verbose = true


[mapping]
type = "edge"
tolerance.distance = 100.0
tolerance.unit = "meters"
geometry_input_file = "../rust/bambam-osm/out/edges-geometries-enumerated.txt.gz"
queries_without_destinations = true
matching_type = ["point", "vertex_id", "edge_id"]


[algorithm]
type = "dijkstra"


[frontier]
type = "combined"

[[frontier.models]]
type = "road_class"
road_class_input_file = "../rust/bambam-osm/out/edges-highway-tag-enumerated.txt.gz"

[[frontier.models]]
type = "time_limit"
time_limit = 40.0
time_unit = "minutes"

[termination]
type = "combined"
[[termination.models]]
type = "query_runtime"
limit = "00:02:00"
frequency = 100_000
[[termination.models]]
type = "solution_size"
limit = 1_000_000


[traversal]
type = "switch"

[[traversal.models]]
mode = "walk"
type = "fixed_speed"
distance_unit = "miles"
time_unit = "minutes"
speed_unit = "kph"
speed = 5
access_model = []
departure_agg = "sum"
arrival_agg = "sum"

[[traversal.models]]
mode = "bike"
type = "fixed_speed"
distance_unit = "miles"
time_unit = "minutes"
speed_unit = "kph"
speed = 16
access_model = []
departure_agg = "sum"
arrival_agg = "sum"

[[traversal.models]]
mode = "drive"
type = "link_speed"
underlying_type = "speed_table"
speed_table_input_file = "../rust/bambam-osm/out/edges-posted-speed-avgfill-enumerated.txt.gz"
speed_unit = "kph"
distance_unit = "miles"
time_unit = "minutes"

# [[traversal.models.access_model]]
# type = "turn_delay"
# edge_heading_input_file = "../../routee-compass-tomtom/data/tomtom_denver/edges-headings-enumerated.csv.gz"
# [access.turn_delay_model]
# type = "tabular_discrete"
# time_unit = "seconds"
# [access.turn_delay_model.table]
# no_turn = 0.0
# slight_right = 0.5
# right = 1.0
# sharp_right = 1.5
# slight_left = 1.0
# left = 2.5
# sharp_left = 3.5
# u_turn = 9.5


[cost.weights]
time = 1


[plugin]

[[plugin.input_plugins]]
type = "grid"
extent_format = "wkt"
grid = { type = "h3", resolution = 8 }
[plugin.input_plugins.population_source]
type = "acs"
acs_type = "five_year"
acs_year = 2022
acs_resolution = "census_tract"
acs_categories = ["B01001_001E"]

[[plugin.input_plugins]]
type = "inject"
key = "start_time"
value = "08:00:00"
format = "string"

[[plugin.input_plugins]]
type = "inject"
key = "start_weekday"
value = "monday"
format = "string"

[[plugin.input_plugins]]
type = "inject"
key = "time_limit"
value = '40.0'
format = "json"

[[plugin.input_plugins]]
type = "inject"
format = "toml"
key = "grid_search"
[plugin.input_plugins.value]
[[__modes__]]
mode = "walk"
road_classes = ["secondary", "secondary_link", "tertiary", "tertiary_link", "unclassified", "residential", "living_street", "service", "track", "road", "path", "footway", "steps", "elevator", "pedestrian", "corridor", "trailhead"]
[[__modes__]]
mode = "bike"
road_classes = ["trunk", "trunk_link", "primary", "primary_link", "secondary", "secondary_link", "tertiary", "tertiary_link", "unclassified", "residential", "living_street", "service", "track", "road", "path", "cycleway", "corridor", "trailhead"]
[[__modes__]]
mode = "drive"
road_classes = ["motorway", "motorway_link", "trunk", "trunk_link", "primary", "primary_link", "secondary", "secondary_link", "tertiary", "tertiary_link", "unclassified", "residential", "service", "track", "road"]

[[plugin.input_plugins]]
type = "grid_search"

[[plugin.input_plugins]]
type = "load_balancer"
[plugin.input_plugins.weight_heuristic]
type = "custom"
[plugin.input_plugins.weight_heuristic.custom_weight_type]
type = "categorical"
column_name = "mode"
default = 1
mapping = { "walk" = 1, "bike" = 10, "drive" = 100 }

[[plugin.output_plugins]]
type = "summary"

[[plugin.output_plugins]]
type = "isochrone"
time_bin = { type = "list", times = [10, 20, 30, 40] }
isochrone_algorithm = { type = "k_nearest_concave_hull", k = 3 }
destination_point_generator = { type = "destination_point" }
isochrone_output_format = "wkb"


[response_output_policy]
type = "combined"

[[response_output_policy.policies]]
type = "file"
filename = "complete.json"
[response_output_policy.policies.format]
type = "json"
newline_delimited = true

[[response_output_policy.policies]]
type = "file"
filename = "errors.csv"
[response_output_policy.policies.format]
type = "csv"
sorted = true
[response_output_policy.policies.format.mapping]
hex_id = "request.grid_id"
mode = "request.mode"
error = { optional = "error" }

[[response_output_policy.policies]]
type = "file"
filename = "result.csv"
[response_output_policy.policies.format]
type = "csv"
sorted = true
[response_output_policy.policies.format.mapping]
hex_id = "request.grid_id"
lon = "request.origin_x"
lat = "request.origin_y"
mode = "request.mode"
runtime = "search_app_runtime"
ram_mb = "search_result_size_mib"

opps_entertainment_10 = "bin.10.opportunities.entertainment"
opps_retail_10 = "bin.10.opportunities.retail"
opps_healthcare_10 = "bin.10.opportunities.healthcare"
opps_services_10 = "bin.10.opportunities.services"
opps_food_10 = "bin.10.opportunities.food"
opps_jobs_10 = "bin.10.opportunities.jobs"
opps_entertainment_20 = "bin.20.opportunities.entertainment"
opps_retail_20 = "bin.20.opportunities.retail"
opps_healthcare_20 = "bin.20.opportunities.healthcare"
opps_services_20 = "bin.20.opportunities.services"
opps_food_20 = "bin.20.opportunities.food"
opps_jobs_20 = "bin.20.opportunities.jobs"
opps_entertainment_30 = "bin.30.opportunities.entertainment"
opps_retail_30 = "bin.30.opportunities.retail"
opps_healthcare_30 = "bin.30.opportunities.healthcare"
opps_services_30 = "bin.30.opportunities.services"
opps_food_30 = "bin.30.opportunities.food"
opps_jobs_30 = "bin.30.opportunities.jobs"
opps_entertainment_40 = "bin.40.opportunities.entertainment"
opps_retail_40 = "bin.40.opportunities.retail"
opps_healthcare_40 = "bin.40.opportunities.healthcare"
opps_services_40 = "bin.40.opportunities.services"
opps_food_40 = "bin.40.opportunities.food"
opps_jobs_40 = "bin.40.opportunities.jobs"

isochrone_10 = "bin.10.isochrone"
isochrone_20 = "bin.20.isochrone"
isochrone_30 = "bin.30.isochrone"
isochrone_40 = "bin.40.isochrone"
